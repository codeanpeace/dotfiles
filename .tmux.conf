# Tmux Configuration

# Start with the default "tabula rasa"
unbind-key -a
source-file ~/.tmux/.tmux.default.conf

# replace action key as C-a
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# ctrl-a, a => ctrl-a, ctrl-a
bind a send-prefix

# reload the config file ctrl-a r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#################################################################
# Vim-ify Tmux
set -g mode-keys vi
set -g status-keys vi
# Instant vim-mode change
# set -s escape-time 0
set -s escape-time 1
set -g focus-events on

#################################################################
# Panes

# quick pane cycling
unbind C-a
bind C-a select-pane -t :.+

# quick pane zoom
# ctrl-a-f
unbind C-f
bind C-f resize-pane -Z

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# Swapped is_vim to account for Fig pseudoterminal, see:
# https://github.com/christoomey/vim-tmux-navigator/issues/295
is_vim="children=(); i=0; pids=( $(ps -o pid= -t '#{pane_tty}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# nav keys with smart pane switching with awareness of vim splits for spacemacs
# https://github.com/keith/evil-tmux-navigator
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# split panes with current directory
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# wip switch-client for sequences/simlayer/modal
#bind-key Z switch-client -T RESIZE

#bind-key -T RESIZE k resize-pane -U \; switch-client -T RESIZE
#bind-key -T RESIZE j resize-pane -D \; switch-client -T RESIZE
#bind-key -T RESIZE h resize-pane -L \; switch-client -T RESIZE
#bind-key -T RESIZE l resize-pane -R \; switch-client -T RESIZE

#bind-key -T RESIZE K resize-pane -U 5 \; switch-client -T RESIZE
#bind-key -T RESIZE J resize-pane -D 5 \; switch-client -T RESIZE
#bind-key -T RESIZE H resize-pane -L 5 \; switch-client -T RESIZE
#bind-key -T RESIZE L resize-pane -R 5 \; switch-client -T RESIZE

#################################################################
# Windows

# create new window with current directory
bind c new-window -c '#{pane_current_path}'
bind C-t new-window -c '#{pane_current_path}'

# switch between windows with shift+left/right
bind -n S-Left  previous-window
bind -n S-Right next-window

# ctrl-a-w will swap to last used window
bind-key C-w last-window

#################################################################
# Sessions

# fzf typeahead search
bind S run-shell -b "~/.tmux/tmux_switch_session.sh"
# menu selection
bind ` run-shell -b "~/.tmux/tmux_switch_session_menu.sh"

#################################################################
# Clipboard & mouse settings
# prefix + [/esc for copy mode, v select, y yank, prefix + ]/p || cmd+v to paste

# reattach to user namespace
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"
# Setup 'v' to begin selection and 'y' to yank as in Vim
unbind p
bind p paste-buffer
bind Escape copy-mode
# bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi v if -F "#{selection_present}" { send -X clear-selection } { send -X begin-selection }
bind -T copy-mode-vi y send-keys -X copy-pipe-no-clear 'pbcopy'
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'pbcopy'

# mouse mode
set -g mouse on
# sane scrolling:
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
# copy on mouse select
bind -n MouseDrag1Pane copy-mode -M
bind -T copy-mode-vi MouseDrag1Pane    send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear 'pbcopy'

#################################################################
# UI

# allow more colors
set -g default-terminal "screen-256color"

# statusbar
set -g status on
set -g status-interval 60
set -g status-left-length 40
set -g status-right-length 40
set -g status-position bottom
set -g status-justify centre

# remove administrative debris in status bar (session name, host name, time)
set -g status-left ''
# session window:pane
set -g status-right "#S #I:#P"

# start index with 1. very un-dev
set -g base-index 1
setw -g pane-base-index 1
# allow display-panes index to linger (prefix q)
set -g display-panes-time 5000

# renumber windows when one is closed
set -g renumber-windows on
# don't rename windows automatically
set -g allow-rename off

# increase the history size
set -g history-limit 10000

#################################################################
# Plugins

# source tmuxline snapshot if present
if-shell "test -f ~/.tmux/tmuxline.conf" "source ~/.tmux/tmuxline.conf"

# Automatic restore
set -g @continuum-restore "on"
set -g @resurrect-strategy-vim "session"

# List of plugins
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "tmux-plugins/tmux-open"
set -g @plugin "b0o/tmux-autoreload"
set -g @plugin 'wfxr/tmux-fzf-url'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.tmux/plugins/tpm/tpm"

#################################################################

# Fig Tmux Integration: Enabled
source-file ~/.fig/tmux
# End of Fig Tmux Integration
